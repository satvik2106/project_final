{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satvik Vattipalli\\\\OneDrive\\\\Desktop\\\\project_new\\\\frontend\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar'; // Import the Navbar component\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [form, setForm] = useState({\n    username: '',\n    password: ''\n  });\n  const [isVerifyingRobot, setIsVerifyingRobot] = useState(false);\n  const [isRobotVerified, setIsRobotVerified] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  const handleVerifyRobot = () => {\n    setIsVerifyingRobot(true);\n    setTimeout(() => {\n      setIsVerifyingRobot(false);\n      setIsRobotVerified(true);\n    }, 3000); // Simulate a 3-second verification process\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (!isRobotVerified) {\n      alert('Please confirm you are not a robot!');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(form)\n      });\n      const result = await response.json();\n      if (response.status === 200) {\n        setSuccessMessage('Login successful! Redirecting...');\n        setErrorMessage('');\n\n        // Store user details in local storage\n        localStorage.setItem('userDetails', JSON.stringify(form));\n        setTimeout(() => {\n          navigate('/verification', {\n            state: {\n              username: form.username,\n              password: form.password\n            }\n          });\n        }, 1000);\n      } else {\n        setErrorMessage(result.message || 'Invalid username or password.');\n        setSuccessMessage('');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      setErrorMessage('An unexpected error occurred. Please try again later.');\n      setSuccessMessage('');\n    }\n  };\n  const handleSignupRedirect = () => {\n    navigate('/signup');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word\",\n          style: {\n            color: 'white'\n          },\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              value: form.username,\n              onChange: handleChange,\n              className: \"signup-input\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: form.password,\n              onChange: handleChange,\n              className: \"signup-input\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group robot-verification\",\n            children: isRobotVerified ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"verified-text\",\n              children: \"\\u2714 Verified!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this) : isVerifyingRobot ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bubble-loader\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"verify-btn\",\n              onClick: handleVerifyRobot,\n              children: \"I am not a robot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `login-btn ${isRobotVerified ? '' : 'disabled'}`,\n            disabled: !isRobotVerified,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"account-text\",\n          children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"signup-link\",\n            onClick: handleSignupRedirect,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"SfeAH4CSL6a1e1uCnUb6f3823/8=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Navbar","jsxDEV","_jsxDEV","LoginPage","_s","form","setForm","username","password","isVerifyingRobot","setIsVerifyingRobot","isRobotVerified","setIsRobotVerified","errorMessage","setErrorMessage","successMessage","setSuccessMessage","navigate","handleChange","e","name","value","target","handleVerifyRobot","setTimeout","handleLogin","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","result","json","status","localStorage","setItem","state","message","error","console","handleSignupRedirect","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","color","onSubmit","type","onChange","required","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Satvik Vattipalli/OneDrive/Desktop/project_new/frontend/src/components/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Navbar from './Navbar'; // Import the Navbar component\r\nimport './LoginPage.css';\r\n\r\nconst LoginPage = () => {\r\n  const [form, setForm] = useState({ username: '', password: '' });\r\n  const [isVerifyingRobot, setIsVerifyingRobot] = useState(false);\r\n  const [isRobotVerified, setIsRobotVerified] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handleVerifyRobot = () => {\r\n    setIsVerifyingRobot(true);\r\n    setTimeout(() => {\r\n      setIsVerifyingRobot(false);\r\n      setIsRobotVerified(true);\r\n    }, 3000); // Simulate a 3-second verification process\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isRobotVerified) {\r\n      alert('Please confirm you are not a robot!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(form),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.status === 200) {\r\n        setSuccessMessage('Login successful! Redirecting...');\r\n        setErrorMessage('');\r\n\r\n        // Store user details in local storage\r\n        localStorage.setItem('userDetails', JSON.stringify(form));\r\n\r\n        setTimeout(() => {\r\n          navigate('/verification', { state: { username: form.username, password: form.password } });\r\n        }, 1000);\r\n      } else {\r\n        setErrorMessage(result.message || 'Invalid username or password.');\r\n        setSuccessMessage('');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      setErrorMessage('An unexpected error occurred. Please try again later.');\r\n      setSuccessMessage('');\r\n    }\r\n  };\r\n\r\n  const handleSignupRedirect = () => {\r\n    navigate('/signup');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar /> {/* Add Navbar at the top */}\r\n      <div className=\"login-container\">\r\n        <div className=\"login-box\">\r\n          <div className=\"word\" style={{ color: 'white' }}>LOGIN</div>\r\n          {successMessage && (\r\n            <p className=\"success-message\">{successMessage}</p>\r\n          )}\r\n          {errorMessage && (\r\n            <p className=\"error-message\">{errorMessage}</p>\r\n          )}\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <label>Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={form.username}\r\n                onChange={handleChange}\r\n                className=\"signup-input\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={form.password}\r\n                onChange={handleChange}\r\n                className=\"signup-input\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group robot-verification\">\r\n              {isRobotVerified ? (\r\n                <p className=\"verified-text\">✔ Verified!</p>\r\n              ) : isVerifyingRobot ? (\r\n                <div className=\"bubble-loader\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"verify-btn\"\r\n                  onClick={handleVerifyRobot}\r\n                >\r\n                  I am not a robot\r\n                </button>\r\n              )}\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className={`login-btn ${isRobotVerified ? '' : 'disabled'}`}\r\n              disabled={!isRobotVerified}\r\n            >\r\n              Login\r\n            </button>\r\n          </form>\r\n          <p className=\"account-text\">\r\n            Don't have an account?{' '}\r\n            <span className=\"signup-link\" onClick={handleSignupRedirect}>\r\n              Sign up\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}