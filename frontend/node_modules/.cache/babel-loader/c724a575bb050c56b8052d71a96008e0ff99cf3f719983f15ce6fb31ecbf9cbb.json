{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satvik Vattipalli\\\\OneDrive\\\\Desktop\\\\project_new\\\\frontend\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar'; // Import the Navbar component\nimport './LoginPage.css'; // Add this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [form, setForm] = useState({\n    username: '',\n    password: ''\n  });\n  const [isRobotChecked, setIsRobotChecked] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  const handleCheckboxChange = e => {\n    setIsRobotChecked(e.target.checked);\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (!isRobotChecked) {\n      alert('Please confirm you are not a robot!');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(form)\n      });\n      const result = await response.json();\n      if (response.status === 200) {\n        // Login successful\n        alert(result.message);\n        navigate('/verification');\n      } else {\n        // Set the error message for login failure\n        setErrorMessage(result.message || 'Invalid username or password.');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      setErrorMessage('An unexpected error occurred. Please try again later.');\n    }\n  };\n  const handleSignupRedirect = () => {\n    navigate('/signup');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"h1\",\n          style: {\n            color: 'white'\n          },\n          children: \"LOGIN KOTTU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              value: form.username,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: form.password,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: isRobotChecked,\n                onChange: handleCheckboxChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), \"I am not a robot\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `login-btn ${isRobotChecked ? '' : 'disabled'}`,\n            disabled: !isRobotChecked,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"account-text\",\n          children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"signup-link\",\n            onClick: handleSignupRedirect,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"e2wQkkk94BSMMty8Lb7+qk8839I=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Navbar","jsxDEV","_jsxDEV","LoginPage","_s","form","setForm","username","password","isRobotChecked","setIsRobotChecked","errorMessage","setErrorMessage","navigate","handleChange","e","name","value","target","handleCheckboxChange","checked","handleLogin","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","result","json","status","message","error","console","handleSignupRedirect","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","color","onSubmit","type","onChange","required","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Satvik Vattipalli/OneDrive/Desktop/project_new/frontend/src/components/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Navbar from './Navbar'; // Import the Navbar component\r\nimport './LoginPage.css'; // Add this CSS file for styling\r\n\r\nconst LoginPage = () => {\r\n  const [form, setForm] = useState({ username: '', password: '' });\r\n  const [isRobotChecked, setIsRobotChecked] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    setIsRobotChecked(e.target.checked);\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isRobotChecked) {\r\n      alert('Please confirm you are not a robot!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(form),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.status === 200) {\r\n        // Login successful\r\n        alert(result.message);\r\n        navigate('/verification');\r\n      } else {\r\n        // Set the error message for login failure\r\n        setErrorMessage(result.message || 'Invalid username or password.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      setErrorMessage('An unexpected error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleSignupRedirect = () => {\r\n    navigate('/signup');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar /> {/* Add Navbar at the top */}\r\n      <div className=\"login-container\">\r\n        <div className=\"login-box\">\r\n          <h1 className=\"h1\" style={{ color: 'white' }}>LOGIN KOTTU</h1>\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <label>Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={form.username}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={form.password}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group checkbox\">\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={isRobotChecked}\r\n                  onChange={handleCheckboxChange}\r\n                />\r\n                I am not a robot\r\n              </label>\r\n            </div>\r\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n            <button\r\n              type=\"submit\"\r\n              className={`login-btn ${isRobotChecked ? '' : 'disabled'}`}\r\n              disabled={!isRobotChecked}\r\n            >\r\n              Login\r\n            </button>\r\n          </form>\r\n          <p className=\"account-text\">\r\n            Don't have an account?{' '}\r\n            <span className=\"signup-link\" onClick={handleSignupRedirect}>\r\n              Sign up\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}