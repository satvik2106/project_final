{"ast":null,"code":"loginForm.addEventListener('submit', async e => {\n  e.preventDefault();\n  const username = document.getElementById('username').value;\n  const password = document.getElementById('password').value;\n  try {\n    const response = await fetch('/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const result = await response.json();\n    if (response.status === 200) {\n      alert(result.message);\n      // Redirect or proceed with login\n    } else {\n      // Show error messages based on response status\n      alert(result.message);\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    alert('An error occurred. Please try again.');\n  }\n});","map":{"version":3,"names":["loginForm","addEventListener","e","preventDefault","username","document","getElementById","value","password","response","fetch","method","headers","body","JSON","stringify","result","json","status","alert","message","error","console"],"sources":["C:/Users/Satvik Vattipalli/OneDrive/Desktop/project_new/frontend/src/components/LoginPage.js"],"sourcesContent":["loginForm.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n    const username = document.getElementById('username').value;\r\n    const password = document.getElementById('password').value;\r\n\r\n    try {\r\n        const response = await fetch('/api/auth/login', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ username, password }),\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.status === 200) {\r\n            alert(result.message);\r\n            // Redirect or proceed with login\r\n        } else {\r\n            // Show error messages based on response status\r\n            alert(result.message);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n        alert('An error occurred. Please try again.');\r\n    }\r\n});\r\n"],"mappings":"AAAAA,SAAS,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAOC,CAAC,IAAK;EAC9CA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK;EAC1D,MAAMC,QAAQ,GAAGH,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK;EAE1D,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX,QAAQ;QAAEI;MAAS,CAAC;IAC/C,CAAC,CAAC;IAEF,MAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAEpC,IAAIR,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;MACzBC,KAAK,CAACH,MAAM,CAACI,OAAO,CAAC;MACrB;IACJ,CAAC,MAAM;MACH;MACAD,KAAK,CAACH,MAAM,CAACI,OAAO,CAAC;IACzB;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9BF,KAAK,CAAC,sCAAsC,CAAC;EACjD;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}