{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satvik Vattipalli\\\\OneDrive\\\\Desktop\\\\project_new\\\\frontend\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar'; // Import the Navbar component\nimport './LoginPage.css'; // Add this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [form, setForm] = useState({\n    username: '',\n    password: ''\n  });\n  const [isRobotChecked, setIsRobotChecked] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState(''); // State for success message\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  const handleCheckboxChange = e => {\n    setIsRobotChecked(e.target.checked);\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (!isRobotChecked) {\n      alert('Please confirm you are not a robot!');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(form)\n      });\n      const result = await response.json();\n      if (response.status === 200) {\n        // Login successful\n        setSuccessMessage('Login successful! Redirecting to verification...');\n        setErrorMessage(''); // Clear error message\n        setTimeout(() => {\n          navigate('/verification'); // Redirect to verification page after 2 seconds\n        }, 2000);\n      } else {\n        // Set the error message for login failure\n        setErrorMessage(result.message || 'Invalid username or password.');\n        setSuccessMessage(''); // Clear success message\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      setErrorMessage('An unexpected error occurred. Please try again later.');\n      setSuccessMessage(''); // Clear success message\n    }\n  };\n  const handleSignupRedirect = () => {\n    navigate('/signup');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"h1\",\n          style: {\n            color: 'white'\n          },\n          children: \"LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          style: {\n            color: 'green',\n            fontWeight: 'bold'\n          },\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          style: {\n            color: 'red',\n            fontWeight: 'bold'\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              value: form.username,\n              onChange: handleChange,\n              className: \"signup-input\" // Modified to match your previous CSS\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: form.password,\n              onChange: handleChange,\n              className: \"signup-input\" // Modified to match your previous CSS\n              ,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: isRobotChecked,\n                onChange: handleCheckboxChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), \"I am not a robot\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `login-btn ${isRobotChecked ? '' : 'disabled'}`,\n            disabled: !isRobotChecked,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"account-text\",\n          children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"signup-link\",\n            onClick: handleSignupRedirect,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"RxKtTIp4zh+FPlY7Akbi1WMXIBA=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Navbar","jsxDEV","_jsxDEV","LoginPage","_s","form","setForm","username","password","isRobotChecked","setIsRobotChecked","errorMessage","setErrorMessage","successMessage","setSuccessMessage","navigate","handleChange","e","name","value","target","handleCheckboxChange","checked","handleLogin","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","result","json","status","setTimeout","message","error","console","handleSignupRedirect","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","color","fontWeight","onSubmit","type","onChange","required","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Satvik Vattipalli/OneDrive/Desktop/project_new/frontend/src/components/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Navbar from './Navbar'; // Import the Navbar component\r\nimport './LoginPage.css'; // Add this CSS file for styling\r\n\r\nconst LoginPage = () => {\r\n  const [form, setForm] = useState({ username: '', password: '' });\r\n  const [isRobotChecked, setIsRobotChecked] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState(''); // State for success message\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    setIsRobotChecked(e.target.checked);\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isRobotChecked) {\r\n      alert('Please confirm you are not a robot!');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(form),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.status === 200) {\r\n        // Login successful\r\n        setSuccessMessage('Login successful! Redirecting to verification...');\r\n        setErrorMessage(''); // Clear error message\r\n        setTimeout(() => {\r\n          navigate('/verification'); // Redirect to verification page after 2 seconds\r\n        }, 2000);\r\n      } else {\r\n        // Set the error message for login failure\r\n        setErrorMessage(result.message || 'Invalid username or password.');\r\n        setSuccessMessage(''); // Clear success message\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      setErrorMessage('An unexpected error occurred. Please try again later.');\r\n      setSuccessMessage(''); // Clear success message\r\n    }\r\n  };\r\n\r\n  const handleSignupRedirect = () => {\r\n    navigate('/signup');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar /> {/* Add Navbar at the top */}\r\n      <div className=\"login-container\">\r\n        <div className=\"login-box\">\r\n          <h1 className=\"h1\" style={{ color: 'white' }}>LOGIN</h1>\r\n          {successMessage && (\r\n            <p className=\"success-message\" style={{ color: 'green', fontWeight: 'bold' }}>\r\n              {successMessage}\r\n            </p>\r\n          )}\r\n          {errorMessage && (\r\n            <p className=\"error-message\" style={{ color: 'red', fontWeight: 'bold' }}>\r\n              {errorMessage}\r\n            </p>\r\n          )}\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <label>Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={form.username}\r\n                onChange={handleChange}\r\n                className=\"signup-input\" // Modified to match your previous CSS\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={form.password}\r\n                onChange={handleChange}\r\n                className=\"signup-input\" // Modified to match your previous CSS\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group checkbox\">\r\n              \r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={isRobotChecked}\r\n                  onChange={handleCheckboxChange}\r\n                />I am not a robot\r\n              </label>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className={`login-btn ${isRobotChecked ? '' : 'disabled'}`}\r\n              disabled={!isRobotChecked}\r\n            >\r\n              Login\r\n            </button>\r\n          </form>\r\n          <p className=\"account-text\">\r\n            Don't have an account?{' '}\r\n            <span className=\"signup-link\" onClick={handleSignupRedirect}>\r\n              Sign up\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}