{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satvik Vattipalli\\\\OneDrive\\\\Desktop\\\\project_new\\\\frontend\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginPage.css'; // Add this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [form, setForm] = useState({\n    username: '',\n    password: ''\n  });\n  const [isRobotChecked, setIsRobotChecked] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  const handleCheckboxChange = e => {\n    setIsRobotChecked(e.target.checked);\n  };\n  const handleLogin = e => {\n    e.preventDefault();\n    if (!isRobotChecked) {\n      alert('Please confirm you are not a robot!');\n      return;\n    }\n    console.log('Login Attempt:', form);\n    navigate('/verification');\n  };\n  const handleSignupRedirect = () => {\n    navigate('/signup');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        ckassname: \"h1\",\n        color: \"white\",\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: form.username,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: form.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group checkbox\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: isRobotChecked,\n              onChange: handleCheckboxChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), \"I am not a robot\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `login-btn ${isRobotChecked ? '' : 'disabled'}`,\n          disabled: !isRobotChecked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"account-text\",\n        children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"signup-link\",\n          onClick: handleSignupRedirect,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"yl0Yd9FM+E9Rpm4rpzL8Lmhm3rE=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","form","setForm","username","password","isRobotChecked","setIsRobotChecked","navigate","handleChange","e","name","value","target","handleCheckboxChange","checked","handleLogin","preventDefault","alert","console","log","handleSignupRedirect","className","children","ckassname","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Satvik Vattipalli/OneDrive/Desktop/project_new/frontend/src/components/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginPage.css'; // Add this CSS file for styling\r\n\r\nconst LoginPage = () => {\r\n  const [form, setForm] = useState({ username: '', password: '' });\r\n  const [isRobotChecked, setIsRobotChecked] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    setIsRobotChecked(e.target.checked);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (!isRobotChecked) {\r\n      alert('Please confirm you are not a robot!');\r\n      return;\r\n    }\r\n    console.log('Login Attempt:', form);\r\n    navigate('/verification');\r\n  };\r\n\r\n  const handleSignupRedirect = () => {\r\n    navigate('/signup');\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h1 ckassname=\"h1\" color=\"white\">LOGIN</h1>\r\n        <form onSubmit={handleLogin}>\r\n          <div className=\"form-group\">\r\n            <label>Username:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={form.username}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={form.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group checkbox\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={isRobotChecked}\r\n                onChange={handleCheckboxChange}\r\n              />\r\n              I am not a robot\r\n            </label>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className={`login-btn ${isRobotChecked ? '' : 'disabled'}`}\r\n            disabled={!isRobotChecked}\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n        <p className=\"account-text\">\r\n          Don't have an account?{' '}\r\n          <span className=\"signup-link\" onClick={handleSignupRedirect}>\r\n            Sign up\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}